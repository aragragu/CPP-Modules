- in the cpoy contructur function why do we pass it as const
- also what is the difference between malloc and new and free and delete
-  i wanna understand what happens under the hode when i pass an object by reference or by value and if i wanted to issinge the data momber of an object with the reference of of another object what happens in there also what happens whene passing an object by value to initialize the data member of another object and why would i use a reference instead of a normal variable
-









well i did finish working on the CPP Module 02 and i have thes question that i need to address so i am gonna giv my quetions and you will unswer them in a way that would make it easy for ne understand and remeber and don't simplifie things to the level where u explain with nothing related to it so i am gonna give the subject and the questions as i said so unswer them and if there's anything else i need to understand u can add it to the unswer, so remember clean unswers easy to remember and and easy to undersand also remember that i need to explain this to peaple one at a time so not everyone are in the same level so put that in considiration also i am gonna provide you with a cpp book for info and also my code also remember i am asking for a detaild explanation but not complicated one and explain the concepts and how do they work as much as you can also act like you don't anything about this and u are just learning like me so start asking question about everything there's and answer them for me also integrate this when u are explaining the code and the question i am gonna ask you too:
- i need to undersand these conceptes "Ad-hoc polymorphism, operator overloading and the Orthodox Canonical class form" also where did i use them in my code
- explain this "Orthodox Canonical Form" and give me everything there's to know about each constructor and there syntax and what each in them means
- what is a floating point number and a fixed point number and how are they represented in memory also what is the diffrence between them and when do we use one of them not the other also the benifits of using one not the other
- what the keywork static means in a class
- also in the copy constructor we did work with the copy assignement constructor as u can see in my code so explain that also in the copy constructor why did we work use a reference to the object as a parameter and in copy assignemet opeartor why do we return a reference aslo how does it work and also explain the concepts of deep and shallow copy in detail and when do we work with them...
a reference , also explain all technical details in them
- explain the code of my ex00 in details and what each thing do , and if u can combine all the question i asked when explaining my code
- explain this synatax "std::ostream& operator<<(std::ostream& out, const Fixed& fixed);" and what does it do also why did we wourk we reference and why didn't we put inside the class also i was asked about this in the exercise "An overload of the insertion (Â«) operator that inserts a floating-point representation of the fixed-point number into the output stream object passed as a parameter" so explain the concept as much as u can
- also explain everything there's to know about the shifting in the ex01 and why did we shift them aslo what happen to the varibale when shifting it by fract_bit and dishifting it and so on .....

- i want to explain these functions declarations "	bool operator<(const Fixed& src); bool operator>(const Fixed &src); bool operator>=(const Fixed &src); bool operator<=(const Fixed &src); bool operator==(const Fixed &src); bool operator!=(const Fixed &src); Fixed& operator++(); Fixed operator++(int); Fixed& operator--(); Fixed operator--(int); Fixed operator+(const Fixed &src) const; Fixed operator-(const Fixed &src) const; Fixed operator*(const Fixed &src) const; Fixed operator/(const Fixed &src) const; static Fixed &min(Fixed &S1, Fixed &S2); static const Fixed &min(const Fixed&fixed_1, const Fixed&fixed_2); static Fixed &max(Fixed &S1, Fixed &S2); static const Fixed &max(const Fixed &S1, const Fixed &S2);" and what they are called also in here "	Fixed& operator++(); Fixed operator++(int);" what is the int stands for and so on ...
- aslo explain these two concetpes overloading and overriding where did i use them in my code and anything related to it and so on .....
- in the cpoy contructur function why do we pass it as const
- also what is the difference between malloc and new and free and delete
-  i wanna understand what happens under the hode when i pass an object by reference or by value and if i wanted to issinge the data momber of an object with the reference of of another object what happens in there also what happens whene passing an object by value to initialize the data member of another object and why would i use a reference instead of a normal variable
-also as i said before act like it's you first time ready C++ and start asking question like even dumber i mean more curious about evrything .....












CPP Module 03 :


ex01:
- in inheretnece why does the base class constructor is bieng called also why does it been called first not the derived class and why in the dectruction it's in revesed order
- when a drevide class inherit from a base class does the data members and methods changes there access specifier or not , and what does happen in there
- also why do i need to call the base class constructur and intialize it with the name i got from the constructor of the derived class
- in ScavTrap in the copy constructor and parametrize contsructor  why do i call the ClapTrap constructor and also in the copy assignment operator why do i call the copy assignment operator of ClapTrap
- how does the precess of inheritence works in memroy , in full details
- if i modified the data member in the base class do they get changed in the derived class too, also if i changed the data members in the derived class do they get changed too iin the bas class


- what is inheretence what are it's type nd everything there's about it that needs to be known also explain with examples
- what is function overriding and if i did not use virtual with a function in the base class and declare it again in the derived class and redifine , what we call that process
- what is virtual function and how deos it operate under the hood also explain with examples
- what is the vtable and how does it work under the hood and by that i mean virtual function and vitual base classe so explain everything that needs to be known and how do it works under the hood also explain with examples
- in the copy constructor and the copy assigenment if i did this (*this = src) does it mean that the base part also is gonna be copied also when i call the the base class copy constructor from the derived class copy constructor it does not retrun anything and the type are the same so how do they work under the hood also explain with examples
- also in the copy assigenment operator  what is the meaning of this line "ClapTrap::operator=(src);" and if it calls the the copy assigenment operator of the base class how does it return what was copied so explain this also under the hood also explain with examples
- you said that in the copy constructor of thr derived class that *this = src is not necessary in my code but this is only if the derived class has not data member also explain with examples
- in virtual inheitance , in mutiple inheritance does the ScavTrap and FragTrap inherit the same base class ClapTrap and do they both shre the same base class in memory also in the diamondTrap if it inherited from ScavTrap and FragTrap does diamond has two subobjects of the base class ClapTrap and when whe use virtual base class what exaclty happens and how does the vtable operate also what does happen under the hood in memroy

- also when i try to assign an allocated DiamondTrap object to a ClapTrap pointer , when i try to access the methods that are in DiamondTrap i couldn't also with ScavTrap i couldn't








- u said that in each class that has a virtual function  a vtable is created so for the derived class does it have a vtable or only the base class
- also i need to understand why do we use virtual with the destructor also with the class inheritence so explain this under the hood and in details of what exacly happening , in the DiamondTrap example


- in the diamond trap if i did declare the a base class pointer and assigne it a derived class why can't i call the functions of the derived class from the base pointer
- also what exacly happen under the hood in the virtual class inheritance and how does it work (explain it using ex03 from CPP Module 03) and walk me throught what happening exactly

- when i use virtual only with the destructor does the other inherited function get's put in the vtable even thought they are not virtual function , and when i did look it up it's called function hidding if i did redefine the functions from the base class in the derived class



DON'T FORGET THE VIRTUAL DESTRUCTORS








CPP MODULE 04


in ex00 : add wrongdog.cpp and .hpp
